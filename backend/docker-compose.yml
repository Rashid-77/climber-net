version: '3.9'

services:
  backend:
    container_name: climb-net
    build:
      dockerfile: Dockerfile
    command: [ 'sh', '-c',
        'until curl http://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:15672/api/aliveness-test/%2F;
        do echo waiting for rabbitmq; sleep 2; done; 
        python main.py'
        ]
    env_file: 
      - .env
    volumes:
      - .:/code
    ports:
      - '8055:8055'
    networks:
      - climber_network
    depends_on:
      - db
      - redis
      - rabbitmq
      - websocket1
      - websocket2

  websocket1:
    build: 
      dockerfile: Dockerfile_websocket
    volumes:
      - .:/code
    env_file: 
      - .env
    environment:
      - WS_ID=1
      - WS_PORT=8081
    command: [ 'sh', '-c',
      'until curl http://{RABBITMQ_USER}:{RABBITMQ_PASSWORD}@rabbitmq:15672/api/aliveness-test/%2F;
      do echo waiting for rabbitmq; sleep 2; done; 
      bash start_websocket_server.sh'
      ]
    networks:
      - climber_network
    depends_on:
      - db
      - redis
      - rabbitmq

  websocket2:
    build: 
      dockerfile: Dockerfile_websocket
    volumes:
      - .:/code
    env_file: 
      - .env
    environment:
      - WS_ID=2
      - WS_PORT=8082
    command: [ 'sh', '-c',
      'until curl http://{RABBITMQ_USER}:{RABBITMQ_PASSWORD}@rabbitmq:15672/api/aliveness-test/%2F;
      do echo waiting for rabbitmq; sleep 2; done; 
      bash start_websocket_server.sh'
      ]
    networks:
      - climber_network
    depends_on:
      - db
      - redis
      - rabbitmq

  db:
    container_name: climber_db 
    image: postgres:15.0-alpine
    ports:
      - '5432:5432'
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./pg_data:/var/lib/postgresql/data/pgdata 
    networks:
      - climber_network

  redis:
    image: redis:6
    container_name: redis
    restart: unless-stopped
    volumes:
        - ./redis/data:/data
        - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    expose:
        - 6379
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - climber_network

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      - .env
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - climber_network

  lb:
    image: haproxy
    hostname: lb
    ports:
      - "8000:8000"
    volumes:
      - ./haproxy:/usr/local/etc/haproxy
    networks:
      - climber_network
    depends_on:
      - backend
      - websocket1
      - websocket2

  tarantool:
    build: 
      context: ./db/tarantool/tarantool-sql/
      dockerfile: Dockerfile
    volumes:
      - ./tarantool_data/:/var/lib/tarantool
    networks:
      - climber_network

  proxy:
    build: ./proxy
    container_name: nginx-proxy
    ports:
      - 80:80
    volumes:
    - ./log/nginx_log/:/var/log/nginx/
    depends_on:
      - lb


networks:
  climber_network:
    name: climber_net
