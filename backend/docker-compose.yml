version: '3'

services:
  backend:
    container_name: climb-net
    build:
      dockerfile: Dockerfile
    command: [ 'sh', '-c',
        'until curl http://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:15672/api/aliveness-test/%2F;
        do echo waiting for rabbitmq; sleep 2; done; 
        python main.py'
        ]
    env_file: 
      - .env
    volumes:
      - .:/code
    ports:
      - '8055:8055'
    depends_on:
      - db
      - redis
      - rabbitmq
      - websocket

  websocket:
    build: websocket_server/
    volumes:
      - .:/code
    env_file: 
      - .env
    # command: [ 'sh', '-c',
    #   'until curl http://{RABBITMQ_USER}:{RABBITMQ_PASSWORD}@rabbitmq:15672/api/aliveness-test/%2F;
    #   do echo waiting for rabbitmq; sleep 2; done; 
    #   python ws.py',
    #   ]
    command: python websocket_server/ws.py
    depends_on:
      - db
      - redis
      - rabbitmq

  db:
    container_name: climber_db 
    image: postgres:15.0-alpine
    ports:
      - '5432:5432'
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./pg_data:/var/lib/postgresql/data/pgdata 

  redis:
    image: redis:6
    container_name: redis
    restart: unless-stopped
    volumes:
        - ./redis/data:/data
        - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    expose:
        - 6379
    command: redis-server /usr/local/etc/redis/redis.conf

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      - .env
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672

  lb:
    image: haproxy
    ports:
      - "8000:8000"
    volumes:
      - ./haproxy:/usr/local/etc/haproxy
    depends_on:
      - backend
      - websocket
